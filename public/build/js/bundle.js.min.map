{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name = \"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name = \"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name = \"hora_id\"]');\r\n\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            } \r\n\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // Comprobar eventos ya tomados, y quitar deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach( li=> li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n        \r\n        function seleccionarHora(e) {\r\n            //Desabilitar hora previa si hay un nuevo clic\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            } \r\n            // Agregar clase\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name = \"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) !== -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                const ponenteHTML = document.createElement('LI');\r\n                ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                ponenteHTML.textContent = ponente.nombre;\r\n                ponenteHTML.dataset.ponenteId = ponente.id;\r\n                ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                // AÃ±adir al DOM\r\n                listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'Sin resultados';\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Eliminar clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            // AÃ±adir clase al clicar\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            // Asignar valor oculto\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar tags del input oculto (editar ponente)\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})(); //IIFE"]}